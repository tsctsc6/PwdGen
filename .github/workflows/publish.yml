name: Publish Application

on:
  workflow_dispatch:

jobs:
  build-desktop:
    strategy:
      matrix:
        rid:
          - win-x64
          - linux-x64

    runs-on: ${{ startsWith(matrix.rid, 'win-') && 'windows-latest' || startsWith(matrix.rid, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 10

    permissions:
      actions: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Publish application
      run: |
        dotnet workload restore ./PwdGen.Desktop/PwdGen.Desktop.csproj
        dotnet publish ./PwdGen.Desktop/PwdGen.Desktop.csproj --configuration Release --runtime ${{ matrix.rid }} --output ./publish --self-contained -p:PublishAot=false -p:PublishReadyToRun=false -p:PublishTrimmed=false -p:PublishSingleFile=true

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.rid }}
        path: ./publish
        if-no-files-found: error

  build-android:
    runs-on: windows-latest
    timeout-minutes: 10

    permissions:
      actions: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Get Keystroe
      run: |
        [System.IO.File]::WriteAllBytes("${{ github.workspace }}/.keystore", [Convert]::FromBase64String("${{ secrets.TSCTSC6_KEYSTORE_BASE64 }}"))

    - name: Publish Android application
      run: |
        dotnet workload restore ./PwdGen.Android/PwdGen.Android.csproj
        dotnet publish ./PwdGen.Android/PwdGen.Android.csproj --output ./publish -f net9.0-android -c Release -p:AndroidKeyStore=true -p:AndroidSigningKeyStore=${{ github.workspace }}/.keystore -p:AndroidSigningKeyAlias=tsctsc6 -p:AndroidSigningKeyPass=${{ secrets.ANDROIDSIGNINGPASSWORD }} -p:AndroidSigningStorePass=${{ secrets.ANDROIDSIGNINGPASSWORD }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-android
        path: ./publish
        if-no-files-found: error

  release1:
    needs:
      - build-desktop
      - build-android
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      run: >
        gh release create v${{ vars.RELEASE_VERSION }}
        --repo ${{ github.event.repository.full_name }}
        --title v${{ vars.RELEASE_VERSION }}
        --notes-file ./changelog.md

  release2:
    needs:
      - release1

    strategy:
      matrix:
        rid:
          - win-x64
          - linux-x64
          - android

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      actions: read
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-${{ matrix.rid }}
        path: release/
    
    - name: Set permissions
      if: ${{ !startsWith(matrix.rid, 'win-') }}
      run: |
        if [ -f release/PwdGen.Desktop ]; then
            chmod +x release/PwdGen.Desktop
        fi
        
        if [ -f release/PwdGen.Desktop.app/Contents/MacOS/PwdGen.Desktop ]; then
            chmod +x release/PwdGen.Desktop.app/Contents/MacOS/PwdGen.Desktop
        fi

    - name: Create package
      # Change into the artifacts directory to avoid including the directory itself in the zip archive
      working-directory: release/
      run: zip -r ../PwdGen-${{ matrix.rid }}-v${{ vars.RELEASE_VERSION }}.zip .

    - name: Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      run: >
        gh release upload v${{ vars.RELEASE_VERSION }}
        PwdGen-${{ matrix.rid }}-v${{ vars.RELEASE_VERSION }}.zip
        --repo ${{ github.event.repository.full_name }}
